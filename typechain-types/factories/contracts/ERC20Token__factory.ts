/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../contracts/ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018c5380380620018c5833981810160405281019062000037919062000372565b60008251141580156200004c57506000815114155b6200008e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000859062000458565b60405180910390fd5b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160029080519060200190620000e792919062000125565b5080600390805190602001906200010092919062000125565b506012600460006101000a81548160ff021916908360ff1602179055505050620004de565b8280546200013390620004a9565b90600052602060002090601f016020900481019282620001575760008555620001a3565b82601f106200017257805160ff1916838001178555620001a3565b82800160010185558215620001a3579182015b82811115620001a257825182559160200191906001019062000185565b5b509050620001b29190620001b6565b5090565b5b80821115620001d1576000816000905550600101620001b7565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200023e82620001f3565b810181811067ffffffffffffffff8211171562000260576200025f62000204565b5b80604052505050565b600062000275620001d5565b905062000283828262000233565b919050565b600067ffffffffffffffff821115620002a657620002a562000204565b5b620002b182620001f3565b9050602081019050919050565b60005b83811015620002de578082015181840152602081019050620002c1565b83811115620002ee576000848401525b50505050565b60006200030b620003058462000288565b62000269565b9050828152602081018484840111156200032a5762000329620001ee565b5b62000337848285620002be565b509392505050565b600082601f830112620003575762000356620001e9565b5b815162000369848260208601620002f4565b91505092915050565b600080604083850312156200038c576200038b620001df565b5b600083015167ffffffffffffffff811115620003ad57620003ac620001e4565b5b620003bb858286016200033f565b925050602083015167ffffffffffffffff811115620003df57620003de620001e4565b5b620003ed858286016200033f565b9150509250929050565b600082825260208201905092915050565b7f617267732073686f756c646e277420626520656d707479000000000000000000600082015250565b600062000440601783620003f7565b91506200044d8262000408565b602082019050919050565b60006020820190508181036000830152620004738162000431565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004c257607f821691505b602082108103620004d857620004d76200047a565b5b50919050565b6113d780620004ee6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461018f5780638da5cb5b146101bf57806395d89b41146101dd5780639dc29fac146101fb578063a9059cbb14610217578063dd62ed3e14610247576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce5671461015557806340c10f1914610173575b600080fd5b6100c1610277565b6040516100ce9190610e5c565b60405180910390f35b6100f160048036038101906100ec9190610f17565b610305565b6040516100fe9190610f72565b60405180910390f35b61010f610468565b60405161011c9190610f9c565b60405180910390f35b61013f600480360381019061013a9190610fb7565b61046e565b60405161014c9190610f72565b60405180910390f35b61015d610646565b60405161016a9190611026565b60405180910390f35b61018d60048036038101906101889190610f17565b610659565b005b6101a960048036038101906101a49190611041565b610832565b6040516101b69190610f9c565b60405180910390f35b6101c761087a565b6040516101d4919061107d565b60405180910390f35b6101e56108a0565b6040516101f29190610e5c565b60405180910390f35b61021560048036038101906102109190610f17565b61092e565b005b610231600480360381019061022c9190610f17565b610b1b565b60405161023e9190610f72565b60405180910390f35b610261600480360381019061025c9190611098565b610b32565b60405161026e9190610f9c565b60405180910390f35b6002805461028490611107565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611107565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90611184565b60405180910390fd5b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516104559190610f9c565b60405180910390a3600191505092915050565b60055481565b60008161047b8533610b32565b10156104bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b3906111f0565b60405180910390fd5b6104c7848484610bb9565b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610553919061123f565b925050819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516106339190610f9c565b60405180910390a3600190509392505050565b600460009054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e0906112bf565b60405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610759576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075090611184565b60405180910390fd5b816005600082825461076b91906112df565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107c091906112df565b925050819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108259190610f9c565b60405180910390a3505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600380546108ad90611107565b80601f01602080910402602001604051908101604052809291908181526020018280546108d990611107565b80156109265780601f106108fb57610100808354040283529160200191610926565b820191906000526020600020905b81548152906001019060200180831161090957829003601f168201915b505050505081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b5906112bf565b60405180910390fd5b8181806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3890611381565b60405180910390fd5b826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a8f919061123f565b925050819055508260056000828254610aa8919061123f565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610b0d9190610f9c565b60405180910390a350505050565b6000610b28338484610bb9565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b8281806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3390611381565b60405180910390fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca390611184565b60405180910390fd5b836000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cfa919061123f565b92505081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d4f91906112df565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610db39190610f9c565b60405180910390a3505050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dfd578082015181840152602081019050610de2565b83811115610e0c576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e2e82610dc3565b610e388185610dce565b9350610e48818560208601610ddf565b610e5181610e12565b840191505092915050565b60006020820190508181036000830152610e768184610e23565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eae82610e83565b9050919050565b610ebe81610ea3565b8114610ec957600080fd5b50565b600081359050610edb81610eb5565b92915050565b6000819050919050565b610ef481610ee1565b8114610eff57600080fd5b50565b600081359050610f1181610eeb565b92915050565b60008060408385031215610f2e57610f2d610e7e565b5b6000610f3c85828601610ecc565b9250506020610f4d85828601610f02565b9150509250929050565b60008115159050919050565b610f6c81610f57565b82525050565b6000602082019050610f876000830184610f63565b92915050565b610f9681610ee1565b82525050565b6000602082019050610fb16000830184610f8d565b92915050565b600080600060608486031215610fd057610fcf610e7e565b5b6000610fde86828701610ecc565b9350506020610fef86828701610ecc565b925050604061100086828701610f02565b9150509250925092565b600060ff82169050919050565b6110208161100a565b82525050565b600060208201905061103b6000830184611017565b92915050565b60006020828403121561105757611056610e7e565b5b600061106584828501610ecc565b91505092915050565b61107781610ea3565b82525050565b6000602082019050611092600083018461106e565b92915050565b600080604083850312156110af576110ae610e7e565b5b60006110bd85828601610ecc565b92505060206110ce85828601610ecc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061111f57607f821691505b602082108103611132576111316110d8565b5b50919050565b7f616464726573732073686f756c646e2774206265207a65726f00000000000000600082015250565b600061116e601983610dce565b915061117982611138565b602082019050919050565b6000602082019050818103600083015261119d81611161565b9050919050565b7f6e6f7420616c6c6f77656420616d6f756e740000000000000000000000000000600082015250565b60006111da601283610dce565b91506111e5826111a4565b602082019050919050565b60006020820190508181036000830152611209816111cd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061124a82610ee1565b915061125583610ee1565b92508282101561126857611267611210565b5b828203905092915050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006112a9600983610dce565b91506112b482611273565b602082019050919050565b600060208201905081810360008301526112d88161129c565b9050919050565b60006112ea82610ee1565b91506112f583610ee1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561132a57611329611210565b5b828201905092915050565b7f6e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b600061136b601283610dce565b915061137682611335565b602082019050919050565b6000602082019050818103600083015261139a8161135e565b905091905056fea2646970667358221220d07866a7a942ad0a5e26bd4fb0165bd4ef73165d6c38053a6e317d87a873500164736f6c634300080d0033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Token> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<ERC20Token>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): ERC20Token {
    return super.attach(address) as ERC20Token;
  }
  override connect(signer: Signer): ERC20Token__factory {
    return super.connect(signer) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new utils.Interface(_abi) as ERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Token {
    return new Contract(address, _abi, signerOrProvider) as ERC20Token;
  }
}
